! function (t, e) {
    "object" == typeof exports && "undefined" != typeof module ? e(exports) : "function" == typeof define && define.amd ? define(["exports"], e) : e((t = "undefined" != typeof globalThis ? globalThis : t || self).TweakpaneInfodumpPlugin = {})
}(this, (function (t) {
    "use strict";
    class e {
        constructor(t) {
            this.controller_ = t
        }
        get element() {
            return this.controller_.view.element
        }
        get disabled() {
            return this.controller_.viewProps.get("disabled")
        }
        set disabled(t) {
            this.controller_.viewProps.set("disabled", t)
        }
        get hidden() {
            return this.controller_.viewProps.get("hidden")
        }
        set hidden(t) {
            this.controller_.viewProps.set("hidden", t)
        }
        dispose() {
            this.controller_.viewProps.set("disposed", !0)
        }
    }

    function n(t, e) {
        if (t.length !== e.length) return !1;
        for (let n = 0; n < t.length; n++)
            if (t[n] !== e[n]) return !1;
        return !0
    }
    class i {
        constructor() {
            this.observers_ = {}
        }
        on(t, e) {
            let n = this.observers_[t];
            return n || (n = this.observers_[t] = []), n.push({
                handler: e
            }), this
        }
        off(t, e) {
            const n = this.observers_[t];
            return n && (this.observers_[t] = n.filter((t => t.handler !== e))), this
        }
        emit(t, e) {
            const n = this.observers_[t];
            n && n.forEach((t => {
                t.handler(e)
            }))
        }
    }
    const r = "tp";

    function a(t) {
        return (e, n) => [r, "-", t, "v", e ? `_${e}` : "", n ? `-${n}` : ""].join("")
    }

    function o(t) {
        return t.rawValue
    }

    function s(t, e) {
        var n, i;
        t.emitter.on("change", (n = o, i = e, t => i(n(t)))), e(t.rawValue)
    }
    class l {
        constructor(t, e) {
            var n;
            this.constraint_ = null == e ? void 0 : e.constraint, this.equals_ = null !== (n = null == e ? void 0 : e.equals) && void 0 !== n ? n : (t, e) => t === e, this.emitter = new i, this.rawValue_ = t
        }
        get constraint() {
            return this.constraint_
        }
        get rawValue() {
            return this.rawValue_
        }
        set rawValue(t) {
            this.setRawValue(t, {
                forceEmit: !1,
                last: !0
            })
        }
        setRawValue(t, e) {
            const n = null != e ? e : {
                forceEmit: !1,
                last: !0
            },
                i = this.constraint_ ? this.constraint_.constrain(t) : t,
                r = this.rawValue_;
            (!this.equals_(r, i) || n.forceEmit) && (this.emitter.emit("beforechange", {
                sender: this
            }), this.rawValue_ = i, this.emitter.emit("change", {
                options: n,
                previousRawValue: r,
                rawValue: i,
                sender: this
            }))
        }
    }
    class u {
        constructor(t) {
            this.emitter = new i, this.value_ = t
        }
        get rawValue() {
            return this.value_
        }
        set rawValue(t) {
            this.setRawValue(t, {
                forceEmit: !1,
                last: !0
            })
        }
        setRawValue(t, e) {
            const n = null != e ? e : {
                forceEmit: !1,
                last: !0
            },
                i = this.value_;
            (i !== t || n.forceEmit) && (this.emitter.emit("beforechange", {
                sender: this
            }), this.value_ = t, this.emitter.emit("change", {
                options: n,
                previousRawValue: i,
                rawValue: this.value_,
                sender: this
            }))
        }
    }

    function d(t, e) {
        const n = null == e ? void 0 : e.constraint,
            i = null == e ? void 0 : e.equals;
        return n || i ? new l(t, e) : new u(t)
    }
    class c {
        constructor(t) {
            this.emitter = new i, this.valMap_ = t;
            for (const t in this.valMap_) {
                this.valMap_[t].emitter.on("change", (() => {
                    this.emitter.emit("change", {
                        key: t,
                        sender: this
                    })
                }))
            }
        }
        static createCore(t) {
            return Object.keys(t).reduce(((e, n) => Object.assign(e, {
                [n]: d(t[n])
            })), {})
        }
        static fromObject(t) {
            const e = this.createCore(t);
            return new c(e)
        }
        get(t) {
            return this.valMap_[t].rawValue
        }
        set(t, e) {
            this.valMap_[t].rawValue = e
        }
        value(t) {
            return this.valMap_[t]
        }
    }

    function p(t) {
        return e => n => {
            if (!e && void 0 === n) return {
                succeeded: !1,
                value: void 0
            };
            if (e && void 0 === n) return {
                succeeded: !0,
                value: void 0
            };
            const i = t(n);
            return void 0 !== i ? {
                succeeded: !0,
                value: i
            } : {
                succeeded: !1,
                value: void 0
            }
        }
    }

    function h(t) {
        return {
            custom: e => p(e)(t),
            boolean: p((t => "boolean" == typeof t ? t : void 0))(t),
            number: p((t => "number" == typeof t ? t : void 0))(t),
            string: p((t => "string" == typeof t ? t : void 0))(t),
            function: p((t => "function" == typeof t ? t : void 0))(t),
            constant: e => p((t => t === e ? e : void 0))(t),
            raw: p((t => t))(t),
            object: e => p((t => {
                var n;
                if (null !== (n = t) && "object" == typeof n) return function (t, e) {
                    return Object.keys(e).reduce(((n, i) => {
                        if (void 0 === n) return;
                        const r = (0, e[i])(t[i]);
                        return r.succeeded ? Object.assign(Object.assign({}, n), {
                            [i]: r.value
                        }) : void 0
                    }), {})
                }(t, e)
            }))(t),
            array: e => p((t => {
                var n;
                if (Array.isArray(t)) return n = e, t.reduce(((t, e) => {
                    if (void 0 === t) return;
                    const i = n(e);
                    return i.succeeded && void 0 !== i.value ? [...t, i.value] : void 0
                }), [])
            }))(t)
        }
    }
    const v = {
        optional: h(!0),
        required: h(!1)
    };
    class b {
        constructor(t) {
            this.value_ = t
        }
        static create(t) {
            return [new b(t), (e, n) => {
                t.setRawValue(e, n)
            }]
        }
        get emitter() {
            return this.value_.emitter
        }
        get rawValue() {
            return this.value_.rawValue
        }
    }
    const g = a("");

    function f(t, e) {
        return function (t, e) {
            return n => {
                ! function (t, e, n) {
                    n ? t.classList.add(e) : t.classList.remove(e)
                }(t, e, n)
            }
        }(t, g(void 0, e))
    }
    class m extends c {
        constructor(t) {
            var e;
            super(t), this.onDisabledChange_ = this.onDisabledChange_.bind(this), this.onParentChange_ = this.onParentChange_.bind(this), this.onParentGlobalDisabledChange_ = this.onParentGlobalDisabledChange_.bind(this), [this.globalDisabled_, this.setGlobalDisabled_] = b.create(d(this.getGlobalDisabled_())), this.value("disabled").emitter.on("change", this.onDisabledChange_), this.value("parent").emitter.on("change", this.onParentChange_), null === (e = this.get("parent")) || void 0 === e || e.globalDisabled.emitter.on("change", this.onParentGlobalDisabledChange_)
        }
        static create(t) {
            var e, n, i;
            const r = null != t ? t : {};
            return new m(c.createCore({
                disabled: null !== (e = r.disabled) && void 0 !== e && e,
                disposed: !1,
                hidden: null !== (n = r.hidden) && void 0 !== n && n,
                parent: null !== (i = r.parent) && void 0 !== i ? i : null
            }))
        }
        get globalDisabled() {
            return this.globalDisabled_
        }
        bindClassModifiers(t) {
            var e, n, i;
            s(this.globalDisabled_, f(t, "disabled")), e = this, n = "hidden", i = f(t, "hidden"), s(e.value(n), i)
        }
        bindDisabled(t) {
            s(this.globalDisabled_, (e => {
                t.disabled = e
            }))
        }
        bindTabIndex(t) {
            s(this.globalDisabled_, (e => {
                t.tabIndex = e ? -1 : 0
            }))
        }
        handleDispose(t) {
            this.value("disposed").emitter.on("change", (e => {
                e && t()
            }))
        }
        getGlobalDisabled_() {
            const t = this.get("parent");
            return !!t && t.globalDisabled.rawValue || this.get("disabled")
        }
        updateGlobalDisabled_() {
            this.setGlobalDisabled_(this.getGlobalDisabled_())
        }
        onDisabledChange_() {
            this.updateGlobalDisabled_()
        }
        onParentGlobalDisabledChange_() {
            this.updateGlobalDisabled_()
        }
        onParentChange_(t) {
            var e;
            const n = t.previousRawValue;
            null == n || n.globalDisabled.emitter.off("change", this.onParentGlobalDisabledChange_), null === (e = this.get("parent")) || void 0 === e || e.globalDisabled.emitter.on("change", this.onParentGlobalDisabledChange_), this.updateGlobalDisabled_()
        }
    }
    const _ = a(""),
        w = {
            veryfirst: "vfst",
            first: "fst",
            last: "lst",
            verylast: "vlst"
        };
    class y {
        constructor(t) {
            this.parent_ = null, this.blade = t.blade, this.view = t.view, this.viewProps = t.viewProps;
            const e = this.view.element;
            this.blade.value("positions").emitter.on("change", (() => {
                ["veryfirst", "first", "last", "verylast"].forEach((t => {
                    e.classList.remove(_(void 0, w[t]))
                })), this.blade.get("positions").forEach((t => {
                    e.classList.add(_(void 0, w[t]))
                }))
            })), this.viewProps.handleDispose((() => {
                ! function (t) {
                    t && t.parentElement && t.parentElement.removeChild(t)
                }(e)
            }))
        }
        get parent() {
            return this.parent_
        }
        set parent(t) {
            if (this.parent_ = t, !("parent" in this.viewProps.valMap_)) return e = {
                key: "parent",
                target: m.name,
                place: "BladeController.parent"
            }, void console.warn([`Missing '${e.key}' of ${e.target} in ${e.place}.`, "Please rebuild plugins with the latest core package."].join(" "));
            var e;
            this.viewProps.set("parent", this.parent_ ? this.parent_.viewProps : null)
        }
    }

    function D(t) {
        return e => e.toFixed(Math.max(Math.min(t, 20), 0))
    }
    D(0);

    function P(t) {
        return [t[0], t[1], t[2]]
    }

    function C(t) {
        return e => function (t, e) {
            const n = D("float" === e ? 2 : 0);
            return `rgb(${P(t.getComponents("rgb", e)).map((t => n(t))).join(", ")})`
        }(e, t)
    }

    function $(t) {
        return e => function (t, e) {
            const n = D(2),
                i = D("float" === e ? 2 : 0);
            return `rgba(${t.getComponents("rgb", e).map(((t, e) => (3 === e ? n : i)(t))).join(", ")})`
        }(e, t)
    }

    function V(t) {
        return e => function (t, e) {
            const n = D("float" === e ? 2 : 0),
                i = ["r", "g", "b"];
            return `{${P(t.getComponents("rgb", e)).map(((t, e) => `${i[e]}: ${n(t)}`)).join(", ")}}`
        }(e, t)
    }

    function j(t) {
        return e => function (t, e) {
            const n = D(2),
                i = D("float" === e ? 2 : 0),
                r = ["r", "g", "b", "a"];
            return `{${t.getComponents("rgb", e).map(((t, e) => `${r[e]}: ${(3 === e ? n : i)(t)}`)).join(", ")}}`
        }(e, t)
    } ["int", "float"].reduce(((t, e) => [...t, {
        format: {
            alpha: !1,
            mode: "rgb",
            notation: "func",
            type: e
        },
        stringifier: C(e)
    }, {
        format: {
            alpha: !0,
            mode: "rgb",
            notation: "func",
            type: e
        },
        stringifier: $(e)
    }, {
        format: {
            alpha: !1,
            mode: "rgb",
            notation: "object",
            type: e
        },
        stringifier: V(e)
    }, {
        format: {
            alpha: !0,
            mode: "rgb",
            notation: "object",
            type: e
        },
        stringifier: j(e)
    }]), []);
    var k = [
        [/\r\n/g, "\n"],
        [/\n(#+)(.*)/g, function (t, e, n) {
            void 0 === n && (n = "");
            var i = e.length;
            return "<h" + i + ">" + n.trim() + "</h" + i + ">"
        }],
        [/!\[([^\[]+)\]\((?:javascript:)?([^\)]+)\)/g, '<img src="$2" alt="$1">'],
        [/\[([^\[]+)\]\((?:javascript:)?([^\)]+)\)/g, '<a href="$2" target="_blank">$1</a>'],
        [/(\*\*|__)(.*?)\1/g, "<strong>$2</strong>"],
        [/\\_/g, "&#95;"],
        [/(\*|_)(.*?)\1/g, "<em>$2</em>"],
        [/\~\~(.*?)\~\~/g, "<del>$1</del>"],
        [/\:\"(.*?)\"\:/g, "<q>$1</q>"],
        [/\n\s*```\n([^]*?)\n\s*```\s*\n/g, "\n<pre>$1</pre>"],
        [/`(.*?)`/g, function (t, e) {
            return "<code>" + function (t) {
                t = t.replace(/\&/g, "&amp;");
                for (var e = "'#<>`*-~_=:\"![]()nt", n = 0; n < 19; n++) t = t.replace(RegExp("\\" + e[n], "g"), (function (t) {
                    return "&#" + t.charCodeAt(0) + ";"
                }));
                return t
            }(e) + "</code>"
        }],
        [/\n(\*|\-|\+)(.*)/g, function (t, e, n) {
            return void 0 === n && (n = ""), "<ul>\n\t<li>" + n.trim() + "</li>\n</ul>"
        }],
        [/\n[0-9]+\.(.*)/g, function (t, e) {
            return void 0 === e && (e = ""), "<ol>\n\t<li>" + e.trim() + "</li>\n</ol>"
        }],
        [/\n(&gt;|\>)(.*)/g, function (t, e, n) {
            return void 0 === n && (n = ""), "\n<blockquote>" + n.trim() + "</blockquote>"
        }],
        [/\n-{5,}/g, "\n<hr />"],
        [/( *\|[^\n]+\|\r?\n)((?: *\|:?[ -]+:?)+ *\|)(\n(?: *\|[^\n]+\|\r?\n?)*)?/g, function (t, e, n, i) {
            var r = n.split("|").filter((function (t, e, n) {
                return e > 0 && e < n.length - 1
            })).map((function (t) {
                return /:-+:/g.test(t) ? "center" : /-+:/g.test(t) ? "right" : /:-+/.test(t) ? "left" : ""
            })),
                a = function (t) {
                    var e = r[t];
                    return e ? ' align="' + e + '"' : ""
                };
            return "\n<table><tbody><tr>" + e.split("|").map((function (t) {
                return t.trim()
            })).filter((function (t) {
                return t && t.length
            })).map((function (t, e) {
                return "<th" + a(e) + ">" + t + "</th>"
            })).join("") + "</tr>" + i.split("\n").map((function (t) {
                return t.trim()
            })).filter((function (t) {
                return t && t.length
            })).map((function (t) {
                return "<tr>" + t.split("|").filter((function (t, e, n) {
                    return e > 0 && e < n.length - 1
                })).map((function (t, e) {
                    return "<td" + a(e) + ">" + t.trim() + "</td>"
                })).join("") + "</tr>"
            })).join("") + "</tbody></table>\n"
        }],
        [/\n([^\n]+)\n/g, function (t, e) {
            var n = e.trim();
            return /^<\/?(ul|ol|li|h|p|bl|table|tr|td)/i.test(n) ? "\n" + e + "\n" : "\n<p>\n" + n + "\n</p>\n"
        }],
        [/\s?<\/ul>\s?<ul>/g, ""],
        [/\s?<\/ol>\s?<ol>/g, ""],
        [/<\/blockquote>\n<blockquote>/g, "<br>\n"],
        [/https?:\/\/[^"']*/g, function (t) {
            return t.replace(/<\/?em>/g, "_")
        }],
        [/&#95;/g, "_"]
    ];
    const x = a("indu"),
        q = a("indub");
    class E {
        constructor(t, e) {
            this.element = t.createElement("div"), this.element.classList.add(x()), e.border && this.element.classList.add(q()), e.viewProps.bindClassModifiers(this.element);
            const n = t.createElement("div");
            n.classList.add(x("t")), e.markdown ? n.innerHTML = function (t, e, n) {
                return void 0 === e && (e = !1), void 0 === n && (n = !1), t = "\n" + t + "\n", k.forEach((function (e) {
                    t = t.replace(e[0], e[1])
                })), e ? n ? t.trim().replace(/^<p>([\s\S]*)<\/p>$/, "$1").replace(/<a href="/, '<a target="_blank" href="') : t.trim().replace(/^<p>([\s\S]*)<\/p>$/, "$1") : n ? t.trim().replace(/<a href="/, '<a target="_blank" href="') : t.trim()
            }(e.content) : n.textContent = e.content, this.element.appendChild(n)
        }
    }
    class G extends y {
        constructor(t, e) {
            super({
                blade: new c({
                    positions: d([], {
                        equals: n
                    })
                }),
                view: new E(t, e),
                viewProps: e.viewProps
            })
        }
    }

    const customCSS = `
    
    .tp-induv {
        position: relative;
        align-items: center;
        display: flex;
        line-height: 1.3;
        border: rgba(255, 255, 255, 0.3) dashed 1px; /* Add the border directly here with 50% opacity */
        border-radius: var(--elm-br);
        margin-left: var(--cnt-h-p);
        margin-right: var(--cnt-h-p);
    }
    
    .tp-induv.tp-v-disabled {
        opacity: .5;
    }
    
    .tp-induv .tp-induv_t {
        color: var(--lbl-fg);
        flex: 1;
        -webkit-hyphens: auto;
        hyphens: auto;
        padding: 2px 4px 2px;
        width: 1px;
    }
    
    .tp-induv .tp-induv_t>*:first-child {
        margin-top: 0;
    }
    
    .tp-induv .tp-induv_t>*:last-child {
        margin-bottom: 0;
    }
    
    .tp-induv .tp-induv_t p,
    .tp-induv .tp-induv_t h1,
    .tp-induv .tp-induv_t h2,
    .tp-induv .tp-induv_t h3,
    .tp-induv .tp-induv_t ol,
    .tp-induv .tp-induv_t ul,
    .tp-induv .tp-induv_t blockquote,
    .tp-induv .tp-induv_t pre {
        margin: .5em 0;
    }
    
    .tp-induv .tp-induv_t a {
        color: var(--btn-bg);
    }
    
    .tp-induv .tp-induv_t a:active {
        color: var(--btn-bg-a);
    }
    
    .tp-induv .tp-induv_t a:hover {
        color: var(--btn-bg-h);
    }
    
    .tp-induv .tp-induv_t h1 {
        font-size: 1.3em;
        font-weight: bold;
    }
    
    .tp-induv .tp-induv_t h2 {
        font-size: 1em;
        font-weight: bold;
    }
    
    .tp-induv .tp-induv_t h3 {
        font-size: 1em;
        font-weight: normal;
    }
    
    .tp-induv .tp-induv_t ol,
    .tp-induv .tp-induv_t ul,
    .tp-induv .tp-induv_t blockquote {
        padding-left: 28px;
    }
    
    `;

    const M = [{
        id: "infodump",
        type: "blade",
        css: customCSS,

        accept(t) {
            const e = v,
                n = function (t, e) {
                    const n = v.required.object(e)(t);
                    return n.succeeded ? n.value : void 0
                }(t, {
                    border: e.optional.boolean,
                    content: e.required.string,
                    markdown: e.optional.boolean,
                    view: e.required.constant("infodump")
                });
            return n ? {
                params: n
            } : null
        },
        controller(t) {
            var e, n;
            return new G(t.document, {
                border: null !== (e = t.params.border) && void 0 !== e && e,
                content: t.params.content,
                markdown: null !== (n = t.params.markdown) && void 0 !== n && n,
                viewProps: t.viewProps
            })
        },
        api: t => t.controller instanceof G ? new e(t.controller) : null
    }];
    t.plugins = M, Object.defineProperty(t, "__esModule", {
        value: !0
    })
}));